{"version":3,"file":"admin-panel.component.js","sourceRoot":"","sources":["../../home/babysharny/projects/project/tmp/broccoli_type_script_compiler-input_base_path-V9BSDMzQ.tmp/0/src/app/admin-panel/admin-panel.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,8BAA2B,kBAAkB,CAAC,CAAA;AAC9C,gCAA6B,oBAAoB,CAAC,CAAA;AAQlD;IAEE,6BACU,KAAmB,EACnB,MAAsB;QADtB,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAgB;IAC5B,CAAC;IAEL,sCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC;IAED,wCAAU,GAAV,UAAW,IAAI;QACb,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI;YAC/B,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;gBACZ,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;YACrB,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,GAAG,CAAC;QACR,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAA,IAAI;YAC/B,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;gBACX,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;oBACxB,GAAG,GAAG,CAAC,CAAC;gBACV,CAAC;YACJ,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,gCAAE,GAAF;QACE,IAAI,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC/B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IA/CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,4BAA4B;YACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;SACzC,CAAC;;2BAAA;IA6CF,0BAAC;AAAD,CAAC,AA5CD,IA4CC;AA5CY,2BAAmB,sBA4C/B,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {GamesService} from \"../games.service\";\nimport {PlayersService} from \"../players.service\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-admin-panel',\n  templateUrl: 'admin-panel.component.html',\n  styleUrls: ['admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor(\n    private games: GamesService,\n    private remote: PlayersService\n  ) { }\n\n  ngOnInit() {\n    this.games.updateForId('steamId');\n  }\n\n  selectGame(game) {\n    this.games.rightGrid.forEach(line => {\n      line.forEach(g => {\n        g.selected = false;\n      })\n    });\n    game.selected = true;\n  }\n\n  getSelectedGame() {\n    let res;\n    this.games.rightGrid.forEach(line => {\n      line.forEach(g => {\n         if (g.selected === true) {\n           res = g;\n         }\n      })\n    })\n\n    return res;\n  }\n\n  gg(){\n    let g = this.getSelectedGame();\n    console.info(g);\n    this.remote.startGame(g);\n  }\n\n  startSteam(){\n    this.remote.startSteam();\n  }\n\n\n}\n"]}
{"version":3,"file":"games.service.js","sourceRoot":"","sources":["../home/babysharny/projects/project/tmp/broccoli_type_script_compiler-input_base_path-paGw6TC0.tmp/0/src/app/games.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAmB,eAAe,CAAC,CAAA;AACnC,QAAO,SAEP,CAAC,CAFe;AAGhB;IAME,sBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QALpB,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;IAIX,CAAC;IAEL,iCAAU,GAAV;IAEA,CAAC;IAED,kCAAW,GAAX;IAEA,CAAC;IAED,kCAAW,GAAX,UAAY,OAAY;QAAxB,iBAqCC;QAnCC,OAAO,GAAG,mBAAmB,CAAC;QAE9B,kFAAkF;QAClF,+BAA+B;QAC/B,IAAI,GAAG,GAAG,kBAAkB,CAAC;QAC7B,oCAAoC;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACf,SAAS,CACR,UAAC,GAAQ;YACP,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAChC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK;iBACnB,GAAG,CAAC,UAAC,CAAM;gBACR,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACnB,CAAC,CAAC,QAAQ,GAAG,kDAAgD,CAAC,CAAC,KAAK,gBAAa,CAAC;gBAClF,CAAC,CAAC,IAAI,GAAG,eAAa,CAAC,CAAC,IAAI,MAAG,CAAC;gBAChC,MAAM,CAAC,CAAC,CAAC;YACX,CAAC,CACF,CAAC;YAEJ,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,KAAI,CAAC,KAAK,CAAC,OAAO,CAChB,UAAC,CAAM,EAAE,KAAa,EAAE,GAAU;gBAChC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACb,EAAE,CAAC,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,GAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,IAAI,GAAG,EAAE,CAAC;gBACZ,CAAC;YACH,CAAC,CAAC,CAAC;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC,CACF,CAAA;IACL,CAAC;IAxDH;QAAC,iBAAU,EAAE;;oBAAA;IA0Db,mBAAC;AAAD,CAAC,AAzDD,IAyDC;AAzDY,oBAAY,eAyDxB,CAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport {Http} from \"@angular/http\";\nimport \"rxjs/Rx\"\n\n@Injectable()\nexport class GamesService {\n\n  left = [];\n  right = [];\n  rightGrid = [];\n\n  constructor(\n    private http: Http\n  ) { }\n\n  updateLeft() {\n\n  }\n\n  updateRight() {\n\n  }\n\n  updateForId(steamId: any) {\n\n    steamId = '76561198321699378';\n\n    // let url = `http://steamcommunity.com/profiles/${steamId}/games/?tab=all&xml=1`;\n    // let url = `./api/games.xml`;\n    let url = `./api/games.json`;\n    // let url = `./api/games_all.json`;\n    this.http.get(url)\n      .subscribe(\n        (res: any) => {\n          let obj = JSON.parse(res._body);\n          console.log(res);\n          console.log(obj);\n          this.right = obj.games\n            .map((x: any) => {\n                x.selected = false;\n                x.logo_big = `http://cdn.akamai.steamstatic.com/steam/apps/${x.appID}/header.jpg`;\n                x.logo = `this.src='${x.logo}'`;\n                return x;\n              }\n            );\n\n          let grid = [];\n          let line = [];\n          this.right.forEach(\n            (g: any, index: number, arr: any[]) => {\n              line.push(g);\n              if ((index+1)%4 == 0 || arr.length - 1 == index) {\n                grid.push(line);\n                line = [];\n              }\n            });\n          console.log(grid);\n          this.rightGrid = grid;\n        }\n      )\n  }\n\n}\n"]}